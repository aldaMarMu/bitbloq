# import Date, ObjectID, Role from "./scalars.graphql"
# import Exercise from "./exercise.graphql"

directive @authRequired(requires: [Role] = [ADMIN]) on QUERY | FIELD

type Query {
  submissions: [Submission] @authRequired(requires: [TEACHER])
  submission(id: ObjectID): Submission
    @authRequired(requires: [STUDENT, TEACHER])
  submissionsByExercise(exercise: ObjectID!): [Submission]
    @authRequired(requires: [TEACHER])
}
type Mutation {
  startSubmission(
    exerciseCode: String!
    studentNick: String!
    password: String!
  ): loginOut
  loginSubmission(
    exerciseCode: String!
    studentNick: String!
    password: String!
  ): loginOut
  updateSubmission(input: SubmissionIn): Submission
    @authRequired(requires: [STUDENT])
  finishSubmission(
    content: String
    cache: String
    studentComment: String
  ): Submission @authRequired(requires: [STUDENT])
  cancelSubmission: Submission @authRequired(requires: [STUDENT])
  deleteSubmission(submissionID: ObjectID!): Submission
    @authRequired(requires: [TEACHER])
  gradeSubmission(
    submissionID: ObjectID
    grade: Float
    teacherComment: String
  ): Submission @authRequired(requires: [TEACHER])
  updatePasswordSubmission(
    submissionID: ObjectID!
    password: String!
  ): Submission @authRequired(requires: [TEACHER])
  setActiveSubmission(submissionID: ObjectID!, active: Boolean!): Submission
    @authRequired(requires: [TEACHER])
}
type Subscription {
  submissionUpdated(exercise: ObjectID!): Submission
    @authRequired(requires: [TEACHER])
  submissionActive: Submission
}

type Submission {
  id: ObjectID
  title: String
  exercise: ObjectID
  user: ObjectID
  document: ObjectID
  studentNick: String
  password: String
  content: String
  cache: String
  submissionToken: String
  finished: Boolean
  studentComment: String
  type: String
  createdAt: Date
  updatedAt: Date
  finishedAt: Date
  grade: Float
  teacherComment: String
  gradedAt: Date
  active: Boolean
}
input SubmissionIn {
  title: String
  finished: Boolean
  studentComment: String
  studentNick: String
  content: String
  cache: String
  type: String
  active: Boolean
}
type loginOut {
  token: String
  exerciseID: String
  type: String
}
