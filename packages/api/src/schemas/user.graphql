# import Date, ObjectID, EmailAddress, JSON, Role from "./scalars.graphql"
# import Document from "./document.graphql"
# import Folder from "./folder.graphql"

directive @authRequired(requires: [Role] = [ADMIN]) on QUERY | FIELD

type Query {
  users: [User] @authRequired(requires: [ADMIN])
  me: User @authRequired(requires: [USER])
}
type Mutation {
  signUpUser(input: UserIn!): String
  activateAccount(token: String): String
  login(email: EmailAddress!, password: String!): String
  renewToken: String
  resetPasswordEmail(email: EmailAddress!): String
  checkResetPasswordToken(token: String): Boolean
  updatePassword(token: String, newPassword: String): String
  deleteUser(id: ObjectID!): User @authRequired(requires: [USER])
  updateUser(id: ObjectID!, input: UserIn!): User
    @authRequired(requires: [USER])
}

type User {
  id: ObjectID
  email: EmailAddress
  password: String
  admin: Boolean
  publisher: Boolean
  teacher: Boolean
  teacherPro: Boolean
  family: Boolean
  name: String
  center: String
  active: Boolean
  signUpToken: String
  authToken: String
  notifications: Boolean
  createdAt: Date
  updatedAt: Date
  lastLogin: Date
  signUpSurvey: JSON
  rootFolder: ObjectID
  documents: [Document]
  folders: [Folder]
}

input UserIn {
  email: EmailAddress
  password: String
  name: String
  center: String
  active: Boolean
  signUpToken: String
  authToken: String
  notifications: Boolean
  signUpSurvey: JSON
}
